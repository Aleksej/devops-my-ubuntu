---

- name: install py-dev linux packages
  apt: name={{ item }} state=latest
  with_items:
   - python-virtualenv
   - python-pip
   - python-dev
   - python-pygments

- name: install virtualenvwrapper
  pip: name=virtualenvwrapper state=latest
  tags: venvwrapper

# foreach python git repo create the venv with the same name
- name: create one venv foreach pydev repo
  shell: source /home/{{ user }}/.zshrc; mkvirtualenv {{ item }}
         executable=/usr/bin/zsh
  with_items: "{{ pydev_repos }}"
  become_user: "{{ user }}"
  become_method: sudo
  tags: venvwrapper

# assuming git repo is already cloned
- name: bind venv to projects
  shell: source /home/{{ user }}/.zshrc; \
         setvirtualenvproject {{ venv_home }}/{{ item }} {{ project_home }}/{{ item }}
         executable=/usr/bin/zsh
  with_items: "{{ pydev_repos }}"
  become_user: "{{ user }}"
  become_method: sudo
  tags: venvwrapper

# project must have a requirements.txt
# `pip` has no option to ignore a missing requirements.txt
# when-condition is tricky for this one:
#   would need the `stat` module to check if file exists
#   store the result with `register`
#   how to do this in a loop?
- name: install required packages into each pydev repo
  pip: requirements={{ project_home }}/{{ item }}/requirements.txt
       virtualenv={{ venv_home }}/{{ item }}
       state=latest
  with_items: "{{ pydev_repos }}"
  become_user: "{{ user }}"
  become_method: sudo
  tags: venvwrapper
